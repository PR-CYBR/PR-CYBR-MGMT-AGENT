version: '3.8'

services:
  web:
    build: ./web
    restart: always
    ports:
      - "80:80"
    depends_on:
      - app
    networks:
      - app_network

  app:
    build: ./app
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/dashboard_db
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MAPBOX_ACCESS_TOKEN=${MAPBOX_ACCESS_TOKEN}
      - MUSIC_API_KEY=${MUSIC_API_KEY}
    volumes:
      - ./app:/app
    networks:
      - app_network

  db:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pr_cybr_mgmt_agent_db_data:/var/lib/postgresql/data
    networks:
      - pr_cybr_mgmt_agent_network

volumes:
  pr_cybr_mgmt_agent_db_data:

networks:
  pr_cybr_mgmt_agent_network:
    driver: bridge

   redis:
    image: redis:6
    restart: always
    networks:
      - pr_cybr_mgmt_agent_network

  agent_runner:
    image: myorg/agent-runner:latest
    restart: always
    environment:
      - AGENT_NAME=pr-cybr-mgmt-agent
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on:
      - db
    networks:
      - pr_cybr_mgmt_agent_network

  github_runner:
    image: myorg/github-actions-runner:latest
    restart: always
    environment:
      - REPO_URL=https://github.com/myorg/myrepo
      - RUNNER_TOKEN=${RUNNER_TOKEN}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - pr_cybr_mgmt_agent_network

networks:
  pr_cybr_mgmt_agent_network:
    driver: bridge

volumes:
  pr_cybr_mgmt_agent_db_data: