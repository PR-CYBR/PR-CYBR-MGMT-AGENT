name: Main Discussion Sync

on:
  push:
    branches:
      - main

permissions:
  contents: read
  discussions: write

jobs:
  sync-discussion:
    name: Sync A-10 Discussion
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Generate A-10 summary
        id: summary
        env:
          BEFORE_SHA: ${{ github.event.before }}
          AFTER_SHA: ${{ github.sha }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_WORKSPACE: ${{ github.workspace }}
        run: |
          python scripts/a10_discussion.py

      - name: Create or update discussion
        id: discussion
        uses: actions/github-script@v7
        env:
          DISCUSSION_TITLE: ${{ steps.summary.outputs.discussion_title }}
          DISCUSSION_BODY_PATH: ${{ steps.summary.outputs.discussion_body_path }}
          TIMESTAMP: ${{ steps.summary.outputs.timestamp }}
          A10_DISCUSSION_CATEGORY: ${{ vars.A10_DISCUSSION_CATEGORY || 'announcements' }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');
            const { owner, repo } = context.repo;
            const title = process.env.DISCUSSION_TITLE;
            const bodyPath = process.env.DISCUSSION_BODY_PATH;
            const categorySlug = process.env.A10_DISCUSSION_CATEGORY;
            const body = fs.readFileSync(bodyPath, 'utf8');

            if (!title) {
              throw new Error('Discussion title was not provided.');
            }

            const categoriesResp = await github.request('GET /repos/{owner}/{repo}/discussion-categories', {
              owner,
              repo,
            });
            let category = categoriesResp.data.find((item) => item.slug === categorySlug);
            if (!category) {
              core.warning(`Category slug "${categorySlug}" not found. Falling back to first category.`);
              category = categoriesResp.data[0];
            }
            if (!category) {
              throw new Error('No discussion categories available for the repository.');
            }

            const discussionsResp = await github.request('GET /repos/{owner}/{repo}/discussions', {
              owner,
              repo,
              per_page: 100,
            });
            const existing = discussionsResp.data.find((item) => item.title === title);

            let discussionUrl;
            if (existing) {
              await github.request('PATCH /repos/{owner}/{repo}/discussions/{discussion_number}', {
                owner,
                repo,
                discussion_number: existing.number,
                body,
              });
              discussionUrl = existing.html_url;
            } else {
              const createResp = await github.request('POST /repos/{owner}/{repo}/discussions', {
                owner,
                repo,
                title,
                body,
                category_id: category.id,
              });
              discussionUrl = createResp.data.html_url;
            }

            const logPath = path.join(process.env.GITHUB_WORKSPACE, 'A-10-RUNS-BOARD');
            const logLine = `${process.env.TIMESTAMP} | ${process.env.GITHUB_SHA} | ${title} | ${discussionUrl}`;
            fs.appendFileSync(logPath, logLine + '\n');

            fs.mkdirSync('/reports', { recursive: true });
            const boardCopyPath = path.join('/reports', 'A-10-RUNS-BOARD');
            fs.copyFileSync(logPath, boardCopyPath);

            core.setOutput('discussion_url', discussionUrl);

      - name: Upload A-10 reports
        uses: actions/upload-artifact@v4
        with:
          name: a10-discussion-reports
          path: |
            /reports
          if-no-files-found: error
